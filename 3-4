//3.
pragma solidity ^0.8;

contract BankAccount {
    address public owner; 
    uint public balance; 

    constructor() {
        owner = msg.sender; 
    }

    
    modifier onlyOwner {
        require(msg.sender == owner, "Only the owner can perform this operation");
        _;
    }

   
    function deposit(uint amount) public onlyOwner {
        require(amount > 0, "Deposit amount must be greater than zero");
        balance += amount;
    }





=============================================================
pragma solidity ^0.6;

contract StudentManagement {
    struct Student {
        int stud_id;
        string stud_Name;
        string department;
    }

    Student[] students;

    function addStudentDetail(int stud_id, string memory stud_Name, string memory department) public {
        Student memory studData = Student(stud_id, stud_Name, department);
        students.push(studData);
    }

    function getStudent(int stud_id) public view returns (string memory, string memory) {
        for (uint i = 0; i < students.length; i++) {
            Student memory stud = students[i];
            if (stud.stud_id == stud_id) {
                return (stud.stud_Name, stud.department);
            }
        }
        return ("Not Found", "Not Found");
    }

    receive() external payable {
       
    }
}
   
    
